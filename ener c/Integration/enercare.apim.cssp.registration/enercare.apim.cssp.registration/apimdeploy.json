{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiManagementServiceName": {
      "defaultValue": "",
      "type": "string"
    },
    "salesTaxApiRelativePath": {
      "type": "string"
    },
    "salesTaxLogicAppBackendName": {
      "type": "string",
      "metadata": {
        "description": "Add logic app for account service"
      }
    },
    "salesTaxLogicAppResource_Group_Name": {
      "type": "string"
    },
    "salesTaxLogicAppKeyValue": {
      "defaultValue": null,
      "type": "securestring",
      "metadata": {
        "description": "The Logic App secret key"
      }
    },
    "salesTaxRestAPIName": {
      "type": "string",
      "metadata": {
        "description": "The name of the REST API."
      }
    },
    "salesTaxWebURLPath": {
      "type": "string",
      "metadata": {
        "description": "The path of the Rest Service."
      }
    },
    "salesTaxProductName": {
      "type": "string"
    },
    "salesTaxApiServiceName": {
      "type": "string"
    },
    "salesTaxApiFunctionName": {
      "type": "string"
    },
    "apiAppInsightsName": { "type": "string" }
  },
  "variables": {
  },
  "resources": [
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/', toLower(parameters('salesTaxRestAPIName')))]",
      "properties": {
        "displayName": "[parameters('salesTaxRestAPIName')]",
        "apiRevision": "1",
        "description": "Azure Logic App.",
        "subscriptionRequired": true,
        "serviceUrl": "[parameters('salesTaxWebURLPath')]",
        "path": "[parameters('salesTaxApiRelativePath')]",
        "protocols": [
          "https"
        ],
        "isCurrent": true
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/backends",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/', parameters('salesTaxLogicAppBackendName'))]",
      "properties": {
        "description": "[parameters('salesTaxRestAPIName')]",
        "url": "[parameters('salesTaxWebURLPath')]",
        "protocol": "http",
        "resourceId": "[concat('https://management.azure.com', '/subscriptions/', subscription().subscriptionId,'/resourceGroups/',  parameters('salesTaxLogicAppResource_Group_Name'), '/providers/Microsoft.Logic/workflows/', parameters('salesTaxLogicAppBackendName'))]"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/products",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/starter')]",
      "properties": {
        "displayName": "Starter",
        "description": "Subscribers will be able to run 5 calls/minute up to a maximum of 100 calls/week.",
        "subscriptionRequired": true,
        "approvalRequired": false,
        "subscriptionsLimit": 1,
        "state": "published"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/products",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/unlimited')]",
      "properties": {
        "displayName": "Unlimited",
        "description": "Subscribers have completely unlimited access to the API. Administrator approval is required.",
        "subscriptionRequired": true,
        "approvalRequired": true,
        "subscriptionsLimit": 1,
        "state": "published"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/products",
      "apiVersion": "2019-12-01-preview",
      "name": "[concat(parameters('apiManagementServiceName'), '/', parameters('salesTaxProductName'))]",
      "properties": {
        "displayName": "[parameters('salesTaxProductName')]",
        "description": "Subscribers have completely product access to the API. Administrator approval is required.",
        "subscriptionRequired": true,
        "approvalRequired": false,
        "subscriptionsLimit": 5,
        "state": "published"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/properties",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/creditchecklogicapp-key')]",
      "properties": {
        "displayName": "creditchecklogicapp-key",
        "value": "[parameters('salesTaxLogicAppKeyValue')]",
        "tags": [
        ],
        "secret": true
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/', toLower(parameters('salesTaxRestAPIName')), '/manual-invoke')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementServiceName'), toLower(parameters('salesTaxRestAPIName')))]"
      ],
      "properties": {
        "displayName": "[parameters('salesTaxApiServiceName')]",
        "method": "POST",
        "urlTemplate": "[parameters('salesTaxApiFunctionName')]",
        "templateParameters": [
        ],
        "description": "Trigger a run of the logic app.",
        "request": {
          "description": "The request body.",
          "queryParameters": [
          ],
          "headers": [
          ],
          "representations": [
            {
              "contentType": "application/json",
              "typeName": "request-manual"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\r\n  \"status\": 200,\r\n  \"Message\": \"Record is successfully sent\"\r\n}"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\r\n  \"errorCode\": 0,\r\n  \"error\": \"string\",\r\n  \"message\": \"string\"\r\n}"
              }
            ]
          },
          {
            "statusCode": 500,
            "description": "",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\r\n  \"errorCode\": 0,\r\n  \"error\": \"string\",\r\n  \"message\": \"string\"\r\n}"
              }
            ]
          },
          {
            "statusCode": 201,
            "description": "",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\r\n  \"status\": 201,\r\n  \"Message\": \"Record is successfully sent\"\r\n}"
              }
            ]
          },
          {
            "statusCode": 202,
            "description": "Request is sent.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\r\n  \"status\": 202,\r\n  \"Message\": \"Record is successfully sent\"\r\n}"
              }
            ]
          },
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\r\n  \"status\": 204,\r\n  \"Message\": \"Record is successfully sent\"\r\n}"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/',parameters('salesTaxProductName') ,'/', parameters('salesTaxRestAPIName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/products', parameters('apiManagementServiceName'), parameters('salesTaxProductName'))]",
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementServiceName'), toLower(parameters('salesTaxRestAPIName')))]"
      ],
      "properties": {
        "displayName": "[parameters('salesTaxRestAPIName')]",
        "apiRevision": "1",
        "description": "Azure Logic App.",
        "subscriptionRequired": true,
        "serviceUrl": "[parameters('salesTaxWebURLPath')]",
        "path": "[parameters('salesTaxApiRelativePath')]",
        "protocols": [
          "https"
        ],
        "isCurrent": true
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/', toLower(parameters('salesTaxRestAPIName')), '/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementServiceName'), toLower(parameters('salesTaxRestAPIName')))]"
      ],
      "properties": {
        "value": "[concat('<policies>\r\n    <inbound>\r\n        <base />\r\n      <set-backend-service id=\"apim-generated-policy\" backend-id=\"', toLower(parameters('salesTaxLogicAppBackendName')), '\" />\r\n    </inbound>\r\n    <backend>\r\n        <base />\r\n    </backend>\r\n    <outbound>\r\n        <base />\r\n    </outbound>\r\n    <on-error>\r\n        <base />\r\n    </on-error>\r\n</policies>')]",
        "format": "xml"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/policies",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/policy')]",
      "properties": {
        "value": "<!--\r\n        IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - Only the <forward-request> policy element can appear within the <backend> section element.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n-->\r\n<policies>\r\n    <inbound />\r\n    <backend>\r\n        <forward-request />\r\n    </backend>\r\n    <outbound />\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/products/policies",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/starter/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/products', parameters('apiManagementServiceName'), 'starter')]"
      ],
      "properties": {
        "value": "<policies>\r\n    <inbound>\r\n        <rate-limit calls=\"5\" renewal-period=\"60\" />\r\n        <quota calls=\"100\" renewal-period=\"604800\" />\r\n        <base />\r\n    </inbound>\r\n    <backend>\r\n        <base />\r\n    </backend>\r\n    <outbound>\r\n        <base />\r\n    </outbound>\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/', toLower(parameters('salesTaxRestAPIName')), '/manual-invoke/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apiManagementServiceName'), toLower(parameters('salesTaxRestAPIName')), 'manual-invoke')]",
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementServiceName'), toLower(parameters('salesTaxRestAPIName')))]"
      ],
      "properties": {
        "value": "<policies>\r\n    <inbound>\r\n        <base />\r\n        <set-method id=\"apim-generated-policy\">POST</set-method>\r\n        <rewrite-uri id=\"apim-generated-policy\" template=\"/manual/paths/invoke/?api-version=2016-06-01&amp;sp=/triggers/manual/run&amp;sv=1.0&amp;sig={{creditchecklogicapp-key}}\" /> \r\n        <set-header id=\"apim-generated-policy\" name=\"Ocp-Apim-Subscription-Key\" exists-action=\"delete\" />\r\n    </inbound>\r\n    <backend>\r\n        <base />\r\n    </backend>\r\n    <outbound>\r\n        <base />\r\n    </outbound>\r\n    <on-error>\r\n        <base />\r\n    </on-error>\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "properties": {
        "alwaysLog": "allErrors",
        "loggerId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', parameters('salesTaxLogicAppResource_Group_Name'),'/providers/Microsoft.ApiManagement/service/', parameters('apiManagementServiceName'),'/loggers/', parameters('apiAppInsightsName'))]",
        "httpCorrelationProtocol": "Legacy",
        "verbosity": "verbose",
        "logClientIp": true,
        "sampling": {
          "samplingType": "fixed",
          "percentage": 100.0
        },
        "frontend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          }
        },
        "backend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          }
        }
      },
      "name": "[concat(parameters('apiManagementServiceName'), '/', parameters('salesTaxRestAPIName') , '/applicationinsights')]",
      "type": "Microsoft.ApiManagement/service/apis/diagnostics",
      "apiVersion": "2019-12-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementServiceName'), parameters('salesTaxRestAPIName'))]"
      ]
    }
  ]
}