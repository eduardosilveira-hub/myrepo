{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "Tag_AppTaxonomy": {
      "type": "string"
    },
    "Tag_MaintenanceWindow": {
      "type": "string"
    },
    "Tag_Realm": {
      "type": "string"
    },
    "Tag_ServiceTier": {
      "type": "string"
    },
    "diagnosticSettings_settingName": {
      "type": "string",
      "metadata": {
        "description": "Name of the setting. Name for the diagnostic setting resource. Eg. 'archiveToStorage' or 'forSecurityTeam'."
      }
    },
    "diagnosticSettings_workspaceName": {
      "type": "string"
    },
    "diagnosticSettings_resourceGroupName": {
      "type": "string"
    },
    "resource_Group_Name": {
      "type": "string"
    },
    "accountName": {
      "type": "string"
    },
    "secret": {
      "type": "string"
    },
    "connections_azureblob": {
      "type": "string"
    },
    "blobDisplayname": {
      "type": "string"
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "australiaeast",
        "australiasoutheast",
        "brazilsouth",
        "centralus",
        "eastasia",
        "eastus",
        "eastus2",
        "japaneast",
        "japanwest",
        "northcentralus",
        "northeurope",
        "southcentralus",
        "southeastasia",
        "westeurope",
        "westus"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "alertSeverity": {
      "type": "int",
      "defaultValue": 3,
      "allowedValues": [
        0,
        1,
        2,
        3,
        4
      ],
      "metadata": {
        "description": "Severity of alert {0,1,2,3,4}"
      }
    },
    "alertIsEnabled": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Specifies whether the alert is enabled"
      }
    },

    "windowSize": {
      "type": "string",
      "defaultValue": "PT5M",
      "allowedValues": [
        "PT1M",
        "PT5M",
        "PT15M",
        "PT30M",
        "PT1H",
        "PT6H",
        "PT12H",
        "PT24H"
      ],
      "metadata": {
        "description": "Period of time used to monitor alert activity based on the threshold. Must be between one minute and one day. ISO 8601 duration format."
      }
    },
    "evaluationFrequency": {
      "type": "string",
      "defaultValue": "PT1M",
      "allowedValues": [
        "PT1M",
        "PT5M",
        "PT15M",
        "PT30M",
        "PT1H"
      ],
      "metadata": {
        "description": "how often the metric alert is evaluated represented in ISO 8601 duration format"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "AppTaxonomy": "[parameters('Tag_AppTaxonomy')]",
        "MaintenanceWindow": "[parameters('Tag_MaintenanceWindow')]",
        "Realm": "[parameters('Tag_Realm')]",
        "ServiceTier": "[parameters('Tag_ServiceTier')]"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Condition": {
              "actions": {
                "Response_2": {
                  "inputs": {
                    "statusCode": 404
                  },
                  "kind": "Http",
                  "runAfter": {},
                  "type": "Response"
                }
              },
              "else": {
                "actions": {
                  "Get_blob_content_(V2)": {
                    "inputs": {
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['azureblob']['connectionId']"
                        }
                      },
                      "method": "get",
                      "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(triggerBody()?['blobServer']))}/files/@{encodeURIComponent(encodeURIComponent(triggerBody()?['blobURL']))}/content",
                      "queries": {
                        "inferContentType": true
                      }
                    },
                    "runAfter": {},
                    "type": "ApiConnection"
                  },
                  "Response": {
                    "inputs": {
                      "body": "@body('Get_blob_content_(V2)')",
                      "statusCode": 200
                    },
                    "kind": "Http",
                    "runAfter": {
                      "Get_blob_content_(V2)": [
                        "Succeeded"
                      ]
                    },
                    "type": "Response"
                  }
                }
              },
              "expression": {
                "or": [
                  {
                    "equals": [
                      "@triggerBody()?['blobURL']",
                      ""
                    ]
                  },
                  {
                    "equals": [
                      "@triggerBody()?['blobServer']",
                      ""
                    ]
                  }
                ]
              },
              "runAfter": {},
              "type": "If"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {},
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "inputs": {
                "schema": {
                  "properties": {
                    "blobServer": {
                      "type": "string"
                    },
                    "blobURL": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "kind": "Http",
              "type": "Request"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob": {
                "connectionId": "[concat(subscription().id,'/resourceGroups/',parameters('resource_Group_Name'),'/providers/Microsoft.Web/connections/', parameters('connections_azureblob'))]",
                "connectionName": "parameters('connections_azureblob')",
                "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/eastus2/managedApis/azureblob')]"

                //"connectionId": "/subscriptions/cbab6663-d76a-47c9-ae1a-369e21f35645/resourceGroups/rg-eu2-eapidomain-customer-dev/providers/Microsoft.Web/connections/azureblob",
                //"connectionName": "azureblob",
                //"id": "/subscriptions/cbab6663-d76a-47c9-ae1a-369e21f35645/providers/Microsoft.Web/locations/eastus2/managedApis/azureblob"
              }
            }
          }
        }
      },
      "resources": [
        {
          "type": "providers/diagnosticSettings",
          "name": "[concat('Microsoft.Insights/', parameters('diagnosticSettings_settingName'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Logic/workflows', parameters('logicAppName'))]"
          ],
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "name": "[parameters('diagnosticSettings_settingName')]",
            "workspaceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('diagnosticSettings_resourceGroupName'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('diagnosticSettings_workspaceName'))]",
            "logs": [
              {
                "category": "WorkflowRuntime",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ],
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ]
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('connections_azureblob')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "displayName": "[parameters('blobDisplayname')]",
        "statuses": [
          {
            "status": "Connected"
          }
        ],
        "parameterValues": {
          "accountName": "[parameters('accountName')]",
          "accessKey": "[parameters('secret')]"
        },
        "api": {
          "name": "[parameters('connections_azureblob')]",
          "displayName": "[parameters('blobDisplayname')]",
          "description": "Azure blob LA deployed from ARM",
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'azureblob')]",
          "type": "Microsoft.Web/locations/managedApis"
        }
      }
    }
  ],
  "outputs": {}
}